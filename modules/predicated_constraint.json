{
  "name": "predicated_constraint",
  "input": "inputtype",
  "logic": {
    "initialization": ["conjunction = 0"],
    "output": ["conjunction"],
    "iteration": [
        "lower1 = params[2]",
        "upper1 = params[3]",
        "lower2 = params[4]",
        "upper2 = params[5]",
        "# Ranging params[0] given predicate params[1] is true",
        "if lower2 <= params[1] <= upper2:",
        "  if upper1 < lower1 and upper1 <= params[0] <= lower1:",
        "    conjunction = (params[0] - lower1) / (upper1 - lower1)",
        "  elif upper1 > lower1 and lower1 <= params[0] <= upper1:",
        "    conjunction = (params[0] - lower1) / (upper1 - lower1)",
        "  else:",
        "    conjunction = 0",
        "else:",
        "  print lower2, params[2], upper2",
        "  conjunction = -1"
    ]
  },
  "output": "outputtype"
}
